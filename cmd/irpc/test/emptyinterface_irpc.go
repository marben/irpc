// Code generated by irpc generator; DO NOT EDIT
package irpctestpkg

import (
	"fmt"
	"github.com/marben/irpc/irpcgen"
)

type emptyInterfaceIRpcService struct {
	impl emptyInterface
	id   []byte
}

func newEmptyInterfaceIRpcService(impl emptyInterface) *emptyInterfaceIRpcService {
	return &emptyInterfaceIRpcService{
		impl: impl,
		id: []byte{
			0x58, 0xcd, 0x93, 0x64, 0xdf, 0x1b, 0x7d, 0x4e,
			0x04, 0x7b, 0x22, 0x55, 0x28, 0xe0, 0x44, 0xa5,
			0xf8, 0xfd, 0xf4, 0x71, 0x14, 0xc5, 0xe5, 0x9e,
			0x4a, 0x83, 0x8d, 0xc2, 0x88, 0xdc, 0xe1, 0x3a,
		},
	}
}
func (s *emptyInterfaceIRpcService) Id() []byte {
	return s.id
}
func (s *emptyInterfaceIRpcService) GetFuncCall(funcId irpcgen.FuncId) (irpcgen.ArgDeserializer, error) {
	switch funcId {
	default:
		return nil, fmt.Errorf("function '%d' doesn't exist on service '%s'", funcId, s.Id())
	}
}

type emptyInterfaceIRpcClient struct {
	endpoint irpcgen.Endpoint
	id       []byte
}

func newEmptyInterfaceIRpcClient(endpoint irpcgen.Endpoint) (*emptyInterfaceIRpcClient, error) {
	id := []byte{
		0x58, 0xcd, 0x93, 0x64, 0xdf, 0x1b, 0x7d, 0x4e,
		0x04, 0x7b, 0x22, 0x55, 0x28, 0xe0, 0x44, 0xa5,
		0xf8, 0xfd, 0xf4, 0x71, 0x14, 0xc5, 0xe5, 0x9e,
		0x4a, 0x83, 0x8d, 0xc2, 0x88, 0xdc, 0xe1, 0x3a,
	}
	if err := endpoint.RegisterClient(id); err != nil {
		return nil, fmt.Errorf("register failed: %w", err)
	}
	return &emptyInterfaceIRpcClient{endpoint: endpoint, id: id}, nil
}
