// Code generated by irpc generator; DO NOT EDIT
package irpctestpkg

import (
	"context"
	"fmt"
	"github.com/marben/irpc"
)

type structAPIIRpcService struct {
	impl structAPI
	id   []byte
}

func newStructAPIIRpcService(impl structAPI) *structAPIIRpcService {
	return &structAPIIRpcService{
		impl: impl,
		id:   []byte{201, 37, 192, 165},
	}
}
func (s *structAPIIRpcService) Id() []byte {
	return s.id
}
func (s *structAPIIRpcService) GetFuncCall(funcId irpc.FuncId) (irpc.ArgDeserializer, error) {
	switch funcId {
	case 0: // VectSum
		return func(d *irpc.Decoder) (irpc.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_structAPIVectSumReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpc.Serializable {
				// EXECUTE
				var resp _Irpc_structAPIVectSumResp
				resp.Param0_ = s.impl.VectSum(args.Param0_v)
				return resp
			}, nil
		}, nil
	case 1: // Vect3x3Sum
		return func(d *irpc.Decoder) (irpc.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_structAPIVect3x3SumReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpc.Serializable {
				// EXECUTE
				var resp _Irpc_structAPIVect3x3SumResp
				resp.Param0_ = s.impl.Vect3x3Sum(args.Param0_v)
				return resp
			}, nil
		}, nil
	case 2: // SumSliceStruct
		return func(d *irpc.Decoder) (irpc.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_structAPISumSliceStructReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpc.Serializable {
				// EXECUTE
				var resp _Irpc_structAPISumSliceStructResp
				resp.Param0_ = s.impl.SumSliceStruct(args.Param0_s)
				return resp
			}, nil
		}, nil
	default:
		return nil, fmt.Errorf("function '%d' doesn't exist on service '%s'", funcId, s.Id())
	}
}

type structAPIIRpcClient struct {
	endpoint *irpc.Endpoint
	id       []byte
}

func newStructAPIIRpcClient(endpoint *irpc.Endpoint) (*structAPIIRpcClient, error) {
	id := []byte{201, 37, 192, 165}
	if err := endpoint.RegisterClient(id); err != nil {
		return nil, fmt.Errorf("register failed: %w", err)
	}
	return &structAPIIRpcClient{endpoint: endpoint, id: id}, nil
}
func (_c *structAPIIRpcClient) VectSum(v vect3) int {
	var req = _Irpc_structAPIVectSumReq{
		Param0_v: v,
	}
	var resp _Irpc_structAPIVectSumResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 0, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate the code
	}
	return resp.Param0_
}
func (_c *structAPIIRpcClient) Vect3x3Sum(v vect3x3) vect3 {
	var req = _Irpc_structAPIVect3x3SumReq{
		Param0_v: v,
	}
	var resp _Irpc_structAPIVect3x3SumResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 1, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate the code
	}
	return resp.Param0_
}
func (_c *structAPIIRpcClient) SumSliceStruct(s sliceStruct) int {
	var req = _Irpc_structAPISumSliceStructReq{
		Param0_s: s,
	}
	var resp _Irpc_structAPISumSliceStructResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 2, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate the code
	}
	return resp.Param0_
}

type _Irpc_structAPIVectSumReq struct {
	Param0_v vect3
}

func (s _Irpc_structAPIVectSumReq) Serialize(e *irpc.Encoder) error {
	if err := e.VarInt(s.Param0_v.a); err != nil {
		return fmt.Errorf("serialize s.Param0_v.a of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.b); err != nil {
		return fmt.Errorf("serialize s.Param0_v.b of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.c); err != nil {
		return fmt.Errorf("serialize s.Param0_v.c of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIVectSumReq) Deserialize(d *irpc.Decoder) error {
	if err := d.VarInt(&s.Param0_v.a); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.a of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.b); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.b of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.c); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.c of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIVectSumResp struct {
	Param0_ int
}

func (s _Irpc_structAPIVectSumResp) Serialize(e *irpc.Encoder) error {
	if err := e.VarInt(s.Param0_); err != nil {
		return fmt.Errorf("serialize s.Param0_ of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIVectSumResp) Deserialize(d *irpc.Decoder) error {
	if err := d.VarInt(&s.Param0_); err != nil {
		return fmt.Errorf("deserialize s.Param0_ of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIVect3x3SumReq struct {
	Param0_v vect3x3
}

func (s _Irpc_structAPIVect3x3SumReq) Serialize(e *irpc.Encoder) error {
	if err := e.VarInt(s.Param0_v.v1.a); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v1.a of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v1.b); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v1.b of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v1.c); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v1.c of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v2.a); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v2.a of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v2.b); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v2.b of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v2.c); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v2.c of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v3.a); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v3.a of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v3.b); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v3.b of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v3.c); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v3.c of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIVect3x3SumReq) Deserialize(d *irpc.Decoder) error {
	if err := d.VarInt(&s.Param0_v.v1.a); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v1.a of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v1.b); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v1.b of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v1.c); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v1.c of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v2.a); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v2.a of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v2.b); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v2.b of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v2.c); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v2.c of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v3.a); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v3.a of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v3.b); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v3.b of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v3.c); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v3.c of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIVect3x3SumResp struct {
	Param0_ vect3
}

func (s _Irpc_structAPIVect3x3SumResp) Serialize(e *irpc.Encoder) error {
	if err := e.VarInt(s.Param0_.a); err != nil {
		return fmt.Errorf("serialize s.Param0_.a of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_.b); err != nil {
		return fmt.Errorf("serialize s.Param0_.b of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_.c); err != nil {
		return fmt.Errorf("serialize s.Param0_.c of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIVect3x3SumResp) Deserialize(d *irpc.Decoder) error {
	if err := d.VarInt(&s.Param0_.a); err != nil {
		return fmt.Errorf("deserialize s.Param0_.a of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_.b); err != nil {
		return fmt.Errorf("deserialize s.Param0_.b of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_.c); err != nil {
		return fmt.Errorf("deserialize s.Param0_.c of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPISumSliceStructReq struct {
	Param0_s sliceStruct
}

func (s _Irpc_structAPISumSliceStructReq) Serialize(e *irpc.Encoder) error {
	{ // s.Param0_s.s1
		var l int = len(s.Param0_s.s1)
		if err := e.VarInt(l); err != nil {
			return fmt.Errorf("serialize l of type 'int': %w", err)
		}

		for i := 0; i < l; i++ {
			if err := e.VarInt(s.Param0_s.s1[i]); err != nil {
				return fmt.Errorf("serialize s.Param0_s.s1[i] of type 'int': %w", err)
			}

		}
	}
	{ // s.Param0_s.s2
		var l int = len(s.Param0_s.s2)
		if err := e.VarInt(l); err != nil {
			return fmt.Errorf("serialize l of type 'int': %w", err)
		}

		for i := 0; i < l; i++ {
			if err := e.VarInt(s.Param0_s.s2[i]); err != nil {
				return fmt.Errorf("serialize s.Param0_s.s2[i] of type 'int': %w", err)
			}

		}
	}
	return nil
}
func (s *_Irpc_structAPISumSliceStructReq) Deserialize(d *irpc.Decoder) error {
	{ // s.Param0_s.s1
		var l int
		if err := d.VarInt(&l); err != nil {
			return fmt.Errorf("deserialize l of type 'int': %w", err)
		}

		s.Param0_s.s1 = make([]int, l)
		for i := 0; i < l; i++ {
			if err := d.VarInt(&s.Param0_s.s1[i]); err != nil {
				return fmt.Errorf("deserialize s.Param0_s.s1[i] of type 'int': %w", err)
			}

		}
	}
	{ // s.Param0_s.s2
		var l int
		if err := d.VarInt(&l); err != nil {
			return fmt.Errorf("deserialize l of type 'int': %w", err)
		}

		s.Param0_s.s2 = make([]int, l)
		for i := 0; i < l; i++ {
			if err := d.VarInt(&s.Param0_s.s2[i]); err != nil {
				return fmt.Errorf("deserialize s.Param0_s.s2[i] of type 'int': %w", err)
			}

		}
	}
	return nil
}

type _Irpc_structAPISumSliceStructResp struct {
	Param0_ int
}

func (s _Irpc_structAPISumSliceStructResp) Serialize(e *irpc.Encoder) error {
	if err := e.VarInt(s.Param0_); err != nil {
		return fmt.Errorf("serialize s.Param0_ of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPISumSliceStructResp) Deserialize(d *irpc.Decoder) error {
	if err := d.VarInt(&s.Param0_); err != nil {
		return fmt.Errorf("deserialize s.Param0_ of type 'int': %w", err)
	}
	return nil
}
