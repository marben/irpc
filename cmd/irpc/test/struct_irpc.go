// Code generated by irpc generator; DO NOT EDIT
package irpctestpkg

import (
	"context"
	"fmt"
	out "github.com/marben/irpc/cmd/irpc/test/out2"
	out2 "github.com/marben/irpc/cmd/irpc/test/out2"
	"github.com/marben/irpc/irpcgen"
	"image"
)

type structAPIIRpcService struct {
	impl structAPI
	id   []byte
}

func newStructAPIIRpcService(impl structAPI) *structAPIIRpcService {
	return &structAPIIRpcService{
		impl: impl,
		id: []byte{
			0x1f, 0x62, 0xe3, 0x09, 0xc3, 0xb4, 0xba, 0xb1,
			0x74, 0x57, 0xd8, 0x3a, 0x39, 0x55, 0x84, 0x23,
			0x72, 0xdb, 0x4d, 0xe2, 0x79, 0xc8, 0x0b, 0x0f,
			0xcd, 0x3c, 0x19, 0x0b, 0x51, 0x86, 0x8c, 0x82,
		},
	}
}
func (s *structAPIIRpcService) Id() []byte {
	return s.id
}
func (s *structAPIIRpcService) GetFuncCall(funcId irpcgen.FuncId) (irpcgen.ArgDeserializer, error) {
	switch funcId {
	case 0: // VectSum
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_structAPIVectSumReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_structAPIVectSumResp
				resp.Param0 = s.impl.VectSum(args.Param0_v)
				return resp
			}, nil
		}, nil
	case 1: // Vect3x3Sum
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_structAPIVect3x3SumReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_structAPIVect3x3SumResp
				resp.Param0 = s.impl.Vect3x3Sum(args.Param0_v)
				return resp
			}, nil
		}, nil
	case 2: // SumSliceStruct
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_structAPISumSliceStructReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_structAPISumSliceStructResp
				resp.Param0 = s.impl.SumSliceStruct(args.Param0_s)
				return resp
			}, nil
		}, nil
	case 3: // InlineParams
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_structAPIInlineParamsReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_structAPIInlineParamsResp
				resp.Param0 = s.impl.InlineParams(args.Param0_s)
				return resp
			}, nil
		}, nil
	case 4: // InlineParamsNamed
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_structAPIInlineParamsNamedReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				s.impl.InlineParamsNamed(args.Param0_s)
				return irpcgen.EmptySerializable{}
			}, nil
		}, nil
	case 5: // InlineInlineParams
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_structAPIInlineInlineParamsReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_structAPIInlineInlineParamsResp
				resp.Param0 = s.impl.InlineInlineParams(args.Param0_s)
				return resp
			}, nil
		}, nil
	case 6: // InlineReturn
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_structAPIInlineReturnReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_structAPIInlineReturnResp
				resp.Param0 = s.impl.InlineReturn(args.Param0_a)
				return resp
			}, nil
		}, nil
	case 7: // PointNeg
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_structAPIPointNegReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_structAPIPointNegResp
				resp.Param0 = s.impl.PointNeg(args.Param0_p)
				return resp
			}, nil
		}, nil
	default:
		return nil, fmt.Errorf("function '%d' doesn't exist on service '%s'", funcId, s.Id())
	}
}

type structAPIIRpcClient struct {
	endpoint irpcgen.Endpoint
	id       []byte
}

func newStructAPIIRpcClient(endpoint irpcgen.Endpoint) (*structAPIIRpcClient, error) {
	id := []byte{
		0x1f, 0x62, 0xe3, 0x09, 0xc3, 0xb4, 0xba, 0xb1,
		0x74, 0x57, 0xd8, 0x3a, 0x39, 0x55, 0x84, 0x23,
		0x72, 0xdb, 0x4d, 0xe2, 0x79, 0xc8, 0x0b, 0x0f,
		0xcd, 0x3c, 0x19, 0x0b, 0x51, 0x86, 0x8c, 0x82,
	}
	if err := endpoint.RegisterClient(id); err != nil {
		return nil, fmt.Errorf("register failed: %w", err)
	}
	return &structAPIIRpcClient{endpoint: endpoint, id: id}, nil
}
func (_c *structAPIIRpcClient) VectSum(v vect3) int {
	var req = _Irpc_structAPIVectSumReq{
		Param0_v: v,
	}
	var resp _Irpc_structAPIVectSumResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 0, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate the code
	}
	return resp.Param0
}
func (_c *structAPIIRpcClient) Vect3x3Sum(v vect3x3) vect3 {
	var req = _Irpc_structAPIVect3x3SumReq{
		Param0_v: v,
	}
	var resp _Irpc_structAPIVect3x3SumResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 1, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate the code
	}
	return resp.Param0
}
func (_c *structAPIIRpcClient) SumSliceStruct(s sliceStruct) int {
	var req = _Irpc_structAPISumSliceStructReq{
		Param0_s: s,
	}
	var resp _Irpc_structAPISumSliceStructResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 2, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate the code
	}
	return resp.Param0
}
func (_c *structAPIIRpcClient) InlineParams(s struct{ a int }) int {
	var req = _Irpc_structAPIInlineParamsReq{
		Param0_s: s,
	}
	var resp _Irpc_structAPIInlineParamsResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 3, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate the code
	}
	return resp.Param0
}
func (_c *structAPIIRpcClient) InlineParamsNamed(s struct {
	a out.Uint8
	b out2.Uint8
}) {
	var req = _Irpc_structAPIInlineParamsNamedReq{
		Param0_s: s,
	}
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 4, req, &irpcgen.EmptyDeserializable{}); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate the code
	}
	return
}
func (_c *structAPIIRpcClient) InlineInlineParams(s struct{ a struct{ b int } }) int {
	var req = _Irpc_structAPIInlineInlineParamsReq{
		Param0_s: s,
	}
	var resp _Irpc_structAPIInlineInlineParamsResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 5, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate the code
	}
	return resp.Param0
}
func (_c *structAPIIRpcClient) InlineReturn(a int) struct{ b int } {
	var req = _Irpc_structAPIInlineReturnReq{
		Param0_a: a,
	}
	var resp _Irpc_structAPIInlineReturnResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 6, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate the code
	}
	return resp.Param0
}
func (_c *structAPIIRpcClient) PointNeg(p image.Point) image.Point {
	var req = _Irpc_structAPIPointNegReq{
		Param0_p: p,
	}
	var resp _Irpc_structAPIPointNegResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 7, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate the code
	}
	return resp.Param0
}

type _Irpc_structAPIVectSumReq struct {
	Param0_v vect3
}

func (s _Irpc_structAPIVectSumReq) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0_v.a); err != nil {
		return fmt.Errorf("serialize s.Param0_v.a of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.b); err != nil {
		return fmt.Errorf("serialize s.Param0_v.b of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.c); err != nil {
		return fmt.Errorf("serialize s.Param0_v.c of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIVectSumReq) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0_v.a); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.a of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.b); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.b of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.c); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.c of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIVectSumResp struct {
	Param0 int
}

func (s _Irpc_structAPIVectSumResp) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0); err != nil {
		return fmt.Errorf("serialize s.Param0 of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIVectSumResp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0); err != nil {
		return fmt.Errorf("deserialize s.Param0 of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIVect3x3SumReq struct {
	Param0_v vect3x3
}

func (s _Irpc_structAPIVect3x3SumReq) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0_v.v1.a); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v1.a of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v1.b); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v1.b of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v1.c); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v1.c of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v2.a); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v2.a of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v2.b); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v2.b of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v2.c); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v2.c of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v3.a); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v3.a of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v3.b); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v3.b of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_v.v3.c); err != nil {
		return fmt.Errorf("serialize s.Param0_v.v3.c of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIVect3x3SumReq) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0_v.v1.a); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v1.a of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v1.b); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v1.b of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v1.c); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v1.c of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v2.a); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v2.a of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v2.b); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v2.b of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v2.c); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v2.c of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v3.a); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v3.a of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v3.b); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v3.b of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_v.v3.c); err != nil {
		return fmt.Errorf("deserialize s.Param0_v.v3.c of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIVect3x3SumResp struct {
	Param0 vect3
}

func (s _Irpc_structAPIVect3x3SumResp) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0.a); err != nil {
		return fmt.Errorf("serialize s.Param0.a of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0.b); err != nil {
		return fmt.Errorf("serialize s.Param0.b of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0.c); err != nil {
		return fmt.Errorf("serialize s.Param0.c of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIVect3x3SumResp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0.a); err != nil {
		return fmt.Errorf("deserialize s.Param0.a of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0.b); err != nil {
		return fmt.Errorf("deserialize s.Param0.b of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0.c); err != nil {
		return fmt.Errorf("deserialize s.Param0.c of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPISumSliceStructReq struct {
	Param0_s sliceStruct
}

func (s _Irpc_structAPISumSliceStructReq) Serialize(e *irpcgen.Encoder) error {
	{ // s.Param0_s.s1 []int
		var l int = len(s.Param0_s.s1)
		if err := e.UvarInt64(uint64(l)); err != nil {
			return fmt.Errorf("serialize uint64(l) of type 'uint64': %w", err)
		}
		for _, v := range s.Param0_s.s1 {
			if err := e.VarInt(v); err != nil {
				return fmt.Errorf("serialize v of type 'int': %w", err)
			}
		}
	}
	{ // s.Param0_s.s2 []int
		var l int = len(s.Param0_s.s2)
		if err := e.UvarInt64(uint64(l)); err != nil {
			return fmt.Errorf("serialize uint64(l) of type 'uint64': %w", err)
		}
		for _, v := range s.Param0_s.s2 {
			if err := e.VarInt(v); err != nil {
				return fmt.Errorf("serialize v of type 'int': %w", err)
			}
		}
	}
	return nil
}
func (s *_Irpc_structAPISumSliceStructReq) Deserialize(d *irpcgen.Decoder) error {
	{ // s.Param0_s.s1 []int
		var ul uint64
		if err := d.UvarInt64(&ul); err != nil {
			return fmt.Errorf("deserialize ul of type 'uint64': %w", err)
		}
		var l int = int(ul)
		s.Param0_s.s1 = make([]int, l)
		for i := range l {
			if err := d.VarInt(&s.Param0_s.s1[i]); err != nil {
				return fmt.Errorf("deserialize s.Param0_s.s1[i] of type 'int': %w", err)
			}
		}
	}
	{ // s.Param0_s.s2 []int
		var ul uint64
		if err := d.UvarInt64(&ul); err != nil {
			return fmt.Errorf("deserialize ul of type 'uint64': %w", err)
		}
		var l int = int(ul)
		s.Param0_s.s2 = make([]int, l)
		for i := range l {
			if err := d.VarInt(&s.Param0_s.s2[i]); err != nil {
				return fmt.Errorf("deserialize s.Param0_s.s2[i] of type 'int': %w", err)
			}
		}
	}
	return nil
}

type _Irpc_structAPISumSliceStructResp struct {
	Param0 int
}

func (s _Irpc_structAPISumSliceStructResp) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0); err != nil {
		return fmt.Errorf("serialize s.Param0 of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPISumSliceStructResp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0); err != nil {
		return fmt.Errorf("deserialize s.Param0 of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIInlineParamsReq struct {
	Param0_s struct{ a int }
}

func (s _Irpc_structAPIInlineParamsReq) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0_s.a); err != nil {
		return fmt.Errorf("serialize s.Param0_s.a of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIInlineParamsReq) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0_s.a); err != nil {
		return fmt.Errorf("deserialize s.Param0_s.a of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIInlineParamsResp struct {
	Param0 int
}

func (s _Irpc_structAPIInlineParamsResp) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0); err != nil {
		return fmt.Errorf("serialize s.Param0 of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIInlineParamsResp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0); err != nil {
		return fmt.Errorf("deserialize s.Param0 of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIInlineParamsNamedReq struct {
	Param0_s struct {
		a out.Uint8
		b out2.Uint8
	}
}

func (s _Irpc_structAPIInlineParamsNamedReq) Serialize(e *irpcgen.Encoder) error {
	if err := e.Uint8(uint8(s.Param0_s.a)); err != nil {
		return fmt.Errorf("serialize s.Param0_s.a of type 'uint8': %w", err)
	}
	if err := e.Uint8(uint8(s.Param0_s.b)); err != nil {
		return fmt.Errorf("serialize s.Param0_s.b of type 'uint8': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIInlineParamsNamedReq) Deserialize(d *irpcgen.Decoder) error {
	if err := d.Uint8((*uint8)(&s.Param0_s.a)); err != nil {
		return fmt.Errorf("deserialize s.Param0_s.a of type 'uint8': %w", err)
	}
	if err := d.Uint8((*uint8)(&s.Param0_s.b)); err != nil {
		return fmt.Errorf("deserialize s.Param0_s.b of type 'uint8': %w", err)
	}
	return nil
}

type _Irpc_structAPIInlineInlineParamsReq struct {
	Param0_s struct{ a struct{ b int } }
}

func (s _Irpc_structAPIInlineInlineParamsReq) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0_s.a.b); err != nil {
		return fmt.Errorf("serialize s.Param0_s.a.b of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIInlineInlineParamsReq) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0_s.a.b); err != nil {
		return fmt.Errorf("deserialize s.Param0_s.a.b of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIInlineInlineParamsResp struct {
	Param0 int
}

func (s _Irpc_structAPIInlineInlineParamsResp) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0); err != nil {
		return fmt.Errorf("serialize s.Param0 of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIInlineInlineParamsResp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0); err != nil {
		return fmt.Errorf("deserialize s.Param0 of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIInlineReturnReq struct {
	Param0_a int
}

func (s _Irpc_structAPIInlineReturnReq) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0_a); err != nil {
		return fmt.Errorf("serialize s.Param0_a of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIInlineReturnReq) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0_a); err != nil {
		return fmt.Errorf("deserialize s.Param0_a of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIInlineReturnResp struct {
	Param0 struct{ b int }
}

func (s _Irpc_structAPIInlineReturnResp) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0.b); err != nil {
		return fmt.Errorf("serialize s.Param0.b of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIInlineReturnResp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0.b); err != nil {
		return fmt.Errorf("deserialize s.Param0.b of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIPointNegReq struct {
	Param0_p image.Point
}

func (s _Irpc_structAPIPointNegReq) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0_p.X); err != nil {
		return fmt.Errorf("serialize s.Param0_p.X of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0_p.Y); err != nil {
		return fmt.Errorf("serialize s.Param0_p.Y of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIPointNegReq) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0_p.X); err != nil {
		return fmt.Errorf("deserialize s.Param0_p.X of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0_p.Y); err != nil {
		return fmt.Errorf("deserialize s.Param0_p.Y of type 'int': %w", err)
	}
	return nil
}

type _Irpc_structAPIPointNegResp struct {
	Param0 image.Point
}

func (s _Irpc_structAPIPointNegResp) Serialize(e *irpcgen.Encoder) error {
	if err := e.VarInt(s.Param0.X); err != nil {
		return fmt.Errorf("serialize s.Param0.X of type 'int': %w", err)
	}
	if err := e.VarInt(s.Param0.Y); err != nil {
		return fmt.Errorf("serialize s.Param0.Y of type 'int': %w", err)
	}
	return nil
}
func (s *_Irpc_structAPIPointNegResp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.VarInt(&s.Param0.X); err != nil {
		return fmt.Errorf("deserialize s.Param0.X of type 'int': %w", err)
	}
	if err := d.VarInt(&s.Param0.Y); err != nil {
		return fmt.Errorf("deserialize s.Param0.Y of type 'int': %w", err)
	}
	return nil
}
