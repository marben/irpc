// Code generated by irpc generator; DO NOT EDIT
package irpctestpkg

import (
	"context"
	"fmt"
	out2 "github.com/marben/irpc/cmd/irpc/test/out"
	"github.com/marben/irpc/irpcgen"
)

type basicNamedAPIIRpcService struct {
	impl basicNamedAPI
	id   []byte
}

func newBasicNamedAPIIRpcService(impl basicNamedAPI) *basicNamedAPIIRpcService {
	return &basicNamedAPIIRpcService{
		impl: impl,
		id: []byte{
			0x48, 0x9d, 0x42, 0xbd, 0xc6, 0xf9, 0x8a, 0x80,
			0xb6, 0xe7, 0x1d, 0xe4, 0x08, 0x6c, 0x17, 0xd0,
			0xbd, 0x87, 0x83, 0xe7, 0xf4, 0x1b, 0xfd, 0x57,
			0x4f, 0x1c, 0x61, 0x4a, 0x55, 0x72, 0x90, 0x88,
		},
	}
}
func (s *basicNamedAPIIRpcService) Id() []byte {
	return s.id
}
func (s *basicNamedAPIIRpcService) GetFuncCall(funcId irpcgen.FuncId) (irpcgen.ArgDeserializer, error) {
	switch funcId {
	case 0: // addFakeUint8
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_basicNamedAPIaddFakeUint8Req
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_basicNamedAPIaddFakeUint8Resp
				resp.Param0 = s.impl.addFakeUint8(args.Param0_a, args.Param0_b)
				return resp
			}, nil
		}, nil
	case 1: // addUint8
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_basicNamedAPIaddUint8Req
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_basicNamedAPIaddUint8Resp
				resp.Param0 = s.impl.addUint8(args.Param0_a, args.Param0_b)
				return resp
			}, nil
		}, nil
	case 2: // addByte
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_basicNamedAPIaddByteReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_basicNamedAPIaddByteResp
				resp.Param0 = s.impl.addByte(args.Param0_a, args.Param0_b)
				return resp
			}, nil
		}, nil
	default:
		return nil, fmt.Errorf("function '%d' doesn't exist on service '%s'", funcId, s.Id())
	}
}

type basicNamedAPIIRpcClient struct {
	endpoint irpcgen.Endpoint
	id       []byte
}

func newBasicNamedAPIIRpcClient(endpoint irpcgen.Endpoint) (*basicNamedAPIIRpcClient, error) {
	id := []byte{
		0x48, 0x9d, 0x42, 0xbd, 0xc6, 0xf9, 0x8a, 0x80,
		0xb6, 0xe7, 0x1d, 0xe4, 0x08, 0x6c, 0x17, 0xd0,
		0xbd, 0x87, 0x83, 0xe7, 0xf4, 0x1b, 0xfd, 0x57,
		0x4f, 0x1c, 0x61, 0x4a, 0x55, 0x72, 0x90, 0x88,
	}
	if err := endpoint.RegisterClient(id); err != nil {
		return nil, fmt.Errorf("register failed: %w", err)
	}
	return &basicNamedAPIIRpcClient{endpoint: endpoint, id: id}, nil
}
func (_c *basicNamedAPIIRpcClient) addFakeUint8(a out2.Uint8, b out2.Uint8) FakeUint8 {
	var req = _Irpc_basicNamedAPIaddFakeUint8Req{
		Param0_a: a,
		Param0_b: b,
	}
	var resp _Irpc_basicNamedAPIaddFakeUint8Resp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 0, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate irpc code
	}
	return resp.Param0
}
func (_c *basicNamedAPIIRpcClient) addUint8(a uint8, b uint8) uint8 {
	var req = _Irpc_basicNamedAPIaddUint8Req{
		Param0_a: a,
		Param0_b: b,
	}
	var resp _Irpc_basicNamedAPIaddUint8Resp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 1, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate irpc code
	}
	return resp.Param0
}
func (_c *basicNamedAPIIRpcClient) addByte(a byte, b byte) byte {
	var req = _Irpc_basicNamedAPIaddByteReq{
		Param0_a: a,
		Param0_b: b,
	}
	var resp _Irpc_basicNamedAPIaddByteResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 2, req, &resp); err != nil {
		panic(err) // to avoid panic, make your func return error and regenerate irpc code
	}
	return resp.Param0
}

type _Irpc_basicNamedAPIaddFakeUint8Req struct {
	Param0_a out2.Uint8
	Param0_b out2.Uint8
}

func (s _Irpc_basicNamedAPIaddFakeUint8Req) Serialize(e *irpcgen.Encoder) error {
	if err := e.Uint8(uint8(s.Param0_a)); err != nil {
		return fmt.Errorf("serialize s.Param0_a of type \"uint8\": %w", err)
	}
	if err := e.Uint8(uint8(s.Param0_b)); err != nil {
		return fmt.Errorf("serialize s.Param0_b of type \"uint8\": %w", err)
	}
	return nil
}
func (s *_Irpc_basicNamedAPIaddFakeUint8Req) Deserialize(d *irpcgen.Decoder) error {
	if err := d.Uint8((*uint8)(&s.Param0_a)); err != nil {
		return fmt.Errorf("deserialize s.Param0_a of type \"uint8\": %w", err)
	}
	if err := d.Uint8((*uint8)(&s.Param0_b)); err != nil {
		return fmt.Errorf("deserialize s.Param0_b of type \"uint8\": %w", err)
	}
	return nil
}

type _Irpc_basicNamedAPIaddFakeUint8Resp struct {
	Param0 FakeUint8
}

func (s _Irpc_basicNamedAPIaddFakeUint8Resp) Serialize(e *irpcgen.Encoder) error {
	if err := e.Uint8(uint8(s.Param0)); err != nil {
		return fmt.Errorf("serialize s.Param0 of type \"uint8\": %w", err)
	}
	return nil
}
func (s *_Irpc_basicNamedAPIaddFakeUint8Resp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.Uint8((*uint8)(&s.Param0)); err != nil {
		return fmt.Errorf("deserialize s.Param0 of type \"uint8\": %w", err)
	}
	return nil
}

type _Irpc_basicNamedAPIaddUint8Req struct {
	Param0_a uint8
	Param0_b uint8
}

func (s _Irpc_basicNamedAPIaddUint8Req) Serialize(e *irpcgen.Encoder) error {
	if err := e.Uint8(s.Param0_a); err != nil {
		return fmt.Errorf("serialize s.Param0_a of type \"uint8\": %w", err)
	}
	if err := e.Uint8(s.Param0_b); err != nil {
		return fmt.Errorf("serialize s.Param0_b of type \"uint8\": %w", err)
	}
	return nil
}
func (s *_Irpc_basicNamedAPIaddUint8Req) Deserialize(d *irpcgen.Decoder) error {
	if err := d.Uint8(&s.Param0_a); err != nil {
		return fmt.Errorf("deserialize s.Param0_a of type \"uint8\": %w", err)
	}
	if err := d.Uint8(&s.Param0_b); err != nil {
		return fmt.Errorf("deserialize s.Param0_b of type \"uint8\": %w", err)
	}
	return nil
}

type _Irpc_basicNamedAPIaddUint8Resp struct {
	Param0 uint8
}

func (s _Irpc_basicNamedAPIaddUint8Resp) Serialize(e *irpcgen.Encoder) error {
	if err := e.Uint8(s.Param0); err != nil {
		return fmt.Errorf("serialize s.Param0 of type \"uint8\": %w", err)
	}
	return nil
}
func (s *_Irpc_basicNamedAPIaddUint8Resp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.Uint8(&s.Param0); err != nil {
		return fmt.Errorf("deserialize s.Param0 of type \"uint8\": %w", err)
	}
	return nil
}

type _Irpc_basicNamedAPIaddByteReq struct {
	Param0_a byte
	Param0_b byte
}

func (s _Irpc_basicNamedAPIaddByteReq) Serialize(e *irpcgen.Encoder) error {
	if err := e.Uint8(s.Param0_a); err != nil {
		return fmt.Errorf("serialize s.Param0_a of type \"byte\": %w", err)
	}
	if err := e.Uint8(s.Param0_b); err != nil {
		return fmt.Errorf("serialize s.Param0_b of type \"byte\": %w", err)
	}
	return nil
}
func (s *_Irpc_basicNamedAPIaddByteReq) Deserialize(d *irpcgen.Decoder) error {
	if err := d.Uint8(&s.Param0_a); err != nil {
		return fmt.Errorf("deserialize s.Param0_a of type \"byte\": %w", err)
	}
	if err := d.Uint8(&s.Param0_b); err != nil {
		return fmt.Errorf("deserialize s.Param0_b of type \"byte\": %w", err)
	}
	return nil
}

type _Irpc_basicNamedAPIaddByteResp struct {
	Param0 byte
}

func (s _Irpc_basicNamedAPIaddByteResp) Serialize(e *irpcgen.Encoder) error {
	if err := e.Uint8(s.Param0); err != nil {
		return fmt.Errorf("serialize s.Param0 of type \"byte\": %w", err)
	}
	return nil
}
func (s *_Irpc_basicNamedAPIaddByteResp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.Uint8(&s.Param0); err != nil {
		return fmt.Errorf("deserialize s.Param0 of type \"byte\": %w", err)
	}
	return nil
}
